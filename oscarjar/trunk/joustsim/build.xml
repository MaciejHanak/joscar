<?xml version="1.0" encoding="us-ascii"?>

<project name="Joust Secure IM Lite" default="build-oscar-jar">
  <description> Joust Secure IM Lite build file </description>

  <property name="oscar.bin" value="oscar/bin"/>
  <property name="aolrtf.bin" value="aolrtf/bin"/>
  <property name="app.bin" value="app/bin"/>
  <property name="common.bin" value="common/bin"/>

  <property name="res.src" value="res"/>

  <property name="file.jar" value="jsim.jar"/>
  <property name="file.bigjar" value="jsim-full.jar"/>
  <property name="dir.lib" value="lib"/>

  <target name="jar" depends="build-oscar-jar-classes" description="builds jsim.jar">
    <delete file="${file.jar}"/>
    <jar file="${file.jar}" manifest="etc/main-manifest.mf">
      <fileset dir="${aolrtf.bin}" includes="**/*.class"/>
      <fileset dir="${app.bin}" includes="**/*.class"/>
      <fileset dir="${oscar.bin}" includes="**/*.class"/>
      <fileset dir="${common.bin}" includes="**/*.class"/>
      <fileset dir="${res.src}" includes="**"/>
    </jar>
    <signjar jar="${file.jar}" keystore="keystore" storepass="aimcrypto"
      alias="signer" keypass="aimcrypto"/>
  </target>

  <target name="bigjar" description="builds jsim-full.jar">
    <delete file="${file.bigjar}"/>
    <jar file="${file.bigjar}" manifest="etc/main-manifest.mf">
      <fileset dir="${aolrtf.bin}" includes="**/*.class"/>
      <fileset dir="${app.bin}" includes="**/*.class"/>
      <fileset dir="${oscar.bin}" includes="**/*.class"/>
      <fileset dir="${common.bin}" includes="**/*.class"/>
      <fileset dir="${res.src}" includes="**"/>
      <fileset dir="." includes="lib/*.jar"/>
    </jar>
    <signjar jar="${file.bigjar}" keystore="keystore" storepass="aimcrypto"
      alias="signer" keypass="aimcrypto"/>
  </target>
  
  <path id="path.compile">
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
  </path>

  <target name="build-oscar-jar-classes" description="Compiles common">
    <javac srcdir="common/src" source="1.5" destdir="${common.bin}">
        <classpath refid="path.compile"/>
    </javac>
    <javac srcdir="oscar/src" source="1.5" destdir="${oscar.bin}" debug="true" >
      <classpath refid="path.compile"/>
      <classpath path="${common.bin}"/>
    </javac>
  </target>

  <target name="clean" description="Wipes compiled classes">
      <mkdir dir="${oscar.bin}" />
      <mkdir dir="${common.bin}" />
      <mkdir dir="${aolrtf.bin}" />
      <mkdir dir="${app.bin}" />
      <mkdir dir="dist" />
      <delete includeEmptyDirs="true">
        <fileset dir="dist" file="oscar.jar" />
        <fileset dir="${oscar.bin}" includes="*" />
        <fileset dir="${common.bin}" includes="*" />
        <fileset dir="${aolrtf.bin}" includes="*" />
        <fileset dir="${app.bin}" includes="*" />
      </delete>
  </target>

  <target name="build-oscar-jar" depends="build-oscar-jar-classes"
          description="builds oscar.jar">
    <delete file="dist/oscar.jar" />
    <jar file="dist/oscar.jar">
      <fileset dir="${oscar.bin}"  includes="**/*.class" />
      <fileset dir="${common.bin}" includes="**/*.class" />
    </jar>
  </target>

  <target name="build-src-archive" description="Makes a tar of the tree">
    <delete file="dist/jsim-src-cvs.tar.bz2" />
    <tar compression="bzip2" destfile="dist/jsim-src-cvs.tar.bz2" basedir="."
      includes="aolrtf/src/** app/src/** etc/** common/src/** oscar/src/** res/** lib/*.jar build.xml"
      defaultexcludes="yes" >
    </tar>
  </target>

  <target name="compile-tests" depends="build-oscar-jar-classes">
    <mkdir dir="test-classes" />
    <javac destdir="test-classes" srcdir="oscar/tests">
      <classpath path="${oscar.bin}" />
      <classpath path="${common.bin}" />
      <classpath refid="path.compile" />
    </javac>
  </target>

  <target name="run-oscar-tests" depends="compile-tests">
    <junit>
      <assertions>
        <enable />
      </assertions>
      <test name="net.kano.joustsim.oscar.oscar.service.icbm.IncomingRvConnectionFunctionalTests" />
      <test name="net.kano.joustsim.oscar.oscar.service.icbm.OutgoingRvConnectionFunctionalTests" />
      <test name="net.kano.joustsim.oscar.oscar.service.icbm.dim.DirectimReceiverTest" />
      <classpath path="${oscar.bin}" />
      <classpath path="${common.bin}" />
      <classpath refid="path.compile" />
      <classpath path="test-classes" />
    </junit>
  </target>


  <target name="nightly" depends="clean, run-oscar-tests, build-oscar-jar, build-src-archive" />
</project>

